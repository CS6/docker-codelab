version: '3.4'

services:
  # nginx:
  #   image: nginx:stable-alphine
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - ${PWD}/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:z
  #   networks:
  #     - frontend

  haproxy-dcard:
    # build:
    #   context: haproxy/.
    #   dockerfile: ./Dockerfile
    image: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 80:80
    depends_on:
      - dcarddrawcardfrontend
    networks:
      - frontend

  dcarddrawcardfrontend:
    image: dcarddrawcardfrontend
    # deploy:
      # endpoint_mode: dnsrr 
    build:
      context: draw-card
      dockerfile: ./Dockerfile
    command: sh -c "yarn && yarn start"
    depends_on:
      - dcarddrawcardbackend
    ports:
      - 3001:3000
    networks:
      - frontend
      - backend

  dcarddrawcardbackend:
    image: dcarddrawcardbackend
    build:
      context: dcard-draw-card-backend
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
    depends_on:
      - redis-server
      - mongo
    command: sh -c "yarn && yarn run make-env && yarn run build  && yarn run start:docker"
    # command: sh -c "yarn && yarn run build && yarn run test-js && yarn run start"
    ports:
      - 3000:3000
    networks:
      - frontend
      - backend

  redis-server:
    image: redis
    ports:
      - 6379:6379
    networks:
      - backend

  mongo:
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - 27017:27017
    networks:
      - backend

networks:
  frontend:
  backend:
